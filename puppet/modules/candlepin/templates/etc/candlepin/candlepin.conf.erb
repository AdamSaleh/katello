jpa.config.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
jpa.config.hibernate.connection.driver_class=org.postgresql.Driver
jpa.config.hibernate.connection.url=jdbc:postgresql:<%= scope.lookupvar("candlepin::params::db_name") %>
jpa.config.hibernate.hbm2ddl.auto=validate
jpa.config.hibernate.connection.username=<%= scope.lookupvar("candlepin::params::db_user") %>
jpa.config.hibernate.connection.password=<%= scope.lookupvar("candlepin::params::db_pass") %>
candlepin.environment_content_filtering=<%= scope.lookupvar("candlepin::params::env_filtering_enabled") %>
<% unless scope.lookupvar("candlepin::params::katello_oauth_key").empty? -%>
module.config.katello=org.candlepin.katello.KatelloModule
candlepin.auth.oauth.enabled = true
candlepin.auth.oauth.consumer.<%= scope.lookupvar("candlepin::params::katello_oauth_key") %>.secret = <%= scope.lookupvar("candlepin::params::katello_oauth_secret") %>
candlepin.crl.file = <%= scope.lookupvar("candlepin::params::crl_file") %>
<%- end -%>

<% unless scope.lookupvar("candlepin::params::thumbslug_oauth_key").empty? -%>
candlepin.auth.oauth.consumer.thumbslug.secret = <%= scope.lookupvar("candlepin::params::thumbslug_oauth_secret") %>
<%- end -%>
